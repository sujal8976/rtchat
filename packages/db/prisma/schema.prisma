// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  username  String     @unique
  password  String
  isOnline  Boolean    @default(false)
  lastPing  DateTime   @default(now())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  rooms     RoomUser[]
  messages  Message[]
}

model Room {
  id          String     @id @default(cuid())
  name        String     @unique
  description String
  createdBy   String
  isPrivate   Boolean    @default(false)
  privateCode String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  users       RoomUser[]
  messages    Message[]
}

model RoomUser {
  id        String   @id @default(cuid())
  userId    String
  roomId    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@unique([userId, roomId])
  @@index([userId])
  @@index([roomId])
}

model Message {
  id        String   @id @default(cuid())
  content   String
  userId    String
  roomId    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@index([roomId])
  @@index([roomId, createdAt])
}
